<?php
session_start();
if (isset($_SESSION['user_id'])) {
    header("Location: ../index.php");
    exit();
}

include '../includes/_database.php';
include '../includes/_functions.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $login = sanitizeInput($_POST['login']);
    $truename = sanitizeInput($_POST['truename']);
    $email = sanitizeInput($_POST['email']);
    $birthday = sanitizeInput($_POST['birthday']);
    $passwd = sanitizeInput($_POST['passwd']);
    $repasswd = sanitizeInput($_POST['repasswd']);
    $faction = intval($_POST['faction']);
    $token = sanitizeInput($_POST['token']);
    $isValid = true;

    // Validation de la date
    if (!empty($birthday)) {
        $birthDate = DateTime::createFromFormat('Y-m-d', $birthday);
        if ($birthDate && $birthDate->format('Y-m-d') === $birthday) {
            $today = new DateTime();
            $age = $today->diff($birthDate)->y;
            if ($age < 13) {
                addError('invalid_age');
                $isValid = false;
            }
        } else {
            addError('invalid_date_format');
            $isValid = false;
        }
    } else {
        addError('invalid_date_format');
        $isValid = false;
    }

    // Vérification du mot de passe
    if ($passwd !== $repasswd) {
        addError('password_mismatch');
        $isValid = false;
    }

    // Vérification du token CSRF
    if (!validateToken($token)) {
        addError('csrf');
        $isValid = false;
    }

    if ($isValid) {
        $hashedPassword = password_hash($passwd, PASSWORD_BCRYPT);
        $validation_token = bin2hex(random_bytes(32));

        try {
            $stmt = $dbCo->prepare("INSERT INTO users (login, passwd, truename, email, birthday, creatime, is_online, faction_id, validation_token, is_verified)
                VALUES (:login, :passwd, :truename, :email, :birthday, NOW(), 0, :faction, :validation_token, 0)");
            $stmt->bindParam(':login', $login);
            $stmt->bindParam(':passwd', $hashedPassword);
            $stmt->bindParam(':truename', $truename);
            $stmt->bindParam(':email', $email);
            $stmt->bindParam(':birthday', $birthday);
            $stmt->bindParam(':faction', $faction);
            $stmt->bindParam(':validation_token', $validation_token);

            if ($stmt->execute()) {
                // Sending email validation
                $validation_link = "https://www.saintseiyajeuderole.online/register/valider_email.php?token=" . $validation_token;
                $subject = "Validez votre email pour Saint Seiya Jeu de Rôle";
                $message = "Bonjour $truename,\n\nMerci de vous être inscrit à Saint Seiya Jeu de Rôle. Pour activer votre compte, veuillez cliquer sur le lien suivant :\n\n$validation_link\n\nSi vous n'avez pas créé de compte, vous pouvez ignorer cet email.\n\nCordialement,\nL'équipe Saint Seiya Jeu de Rôle";
                $headers = "From: no-reply@saintseiyajeuderole.online";

                if (mail($email, $subject, $message, $headers)) {
                    addMessage('registration_success');
                    header("Location: check_email.php");
                    exit();
                } else {
                    addError('email_send_failed');
                }
            } else {
                addError('registration_failed');
            }
        } catch (PDOException $e) {
            addError('registration_failed');
            error_log('Registration failed: ' . $e->getMessage());
        }
    }
}

// Redirect to registration page with error messages
header("Location: register.php");
exit();
?>